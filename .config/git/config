[init]
  defaultBranch = master
[user]
  name = Lovro Kalinovcic
  email = lovro@lovro.dev
  signingkey = /home/lovro/.ssh/id_ed25519.pub
[credential]
  helper = store
[core]
  editor = subl -n -w
[gpg]
  format = ssh
[rebase]
  updateRefs = true
[alias]
  xadd     = add -u
  xamend   = commit --amend --no-edit
  xbranch  = "!r() { \
                remote="$(git remote show | head -n 1)"; \
                refbranch=$1 count=$2; \
                git for-each-ref --sort=-committerdate refs/heads \
                --format='%(refname:short)|%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' \
                --color=always --count=${count:-20} | \
                while read line; do \
                  branch=$(echo \"$line\" | awk 'BEGIN { FS = \"|\" }; { print $1 }' | tr -d '*'); \
                  ahead=$(git rev-list --count \"${refbranch:-$remote/master}..${branch}\"); \
                  behind=$(git rev-list --count \"${branch}..${refbranch:-$remote/master}\"); \
                  colorline=$(echo \"$line\" | sed 's/^[^|]*|//'); \
                  echo \"$ahead|$behind|$colorline\" | \
                  awk -F'|' -vOFS='|' '{$5=substr($5,1,70)}1'; \
                done | \
                ( echo \"ahead|behind|branch|lastcommit|message|author\n\" && cat) | \
                column -ts'|'; \
              }; r"
  xlog     = log --pretty=format:\"%C(yellow)%h %cd %C(reset)%s%C(red)%d%C(blue) [%an %ad]\" --decorate --date=short
  xgraph   = log --pretty=format:\"%C(yellow)%h %cd %C(reset)%s%C(red)%d%C(blue) [%an %ad]\" --decorate --simplify-by-decoration --date=short --graph --branches --full-history
  xpushf   = push --force-with-lease
  xpullf   = "!remote="$(git remote show | head -n 1)" && \
               git fetch $remote && \
               branch_name=$(git rev-parse --abbrev-ref HEAD) && \
               read -p \"HEAD is now at $(git log -1 --pretty=format:'%h %s' HEAD)\nRemote HEAD is $(git log -1 --pretty=format:'%h %s' $remote/$branch_name)\nContinue with hard reset to $remote/$branch_name? [y/N] \" confirm && \
               [ \"$confirm\" = y ] && git reset --hard $remote/$branch_name"
